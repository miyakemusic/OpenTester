package org.opentester;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.JdbcUserDetailsManager;
import org.springframework.security.provisioning.UserDetailsManager;


@Configuration
public class DatabaseConfiguration {
	 
    @Autowired
    DataSource dataSource;
    
    @Bean
    public UserDetailsManager userDetailsManager() {
    	UserDetailsManager userDetailsManager = new JdbcUserDetailsManager(dataSource);  	
   // 	UserDetails admin = userDetailsManager.loadUserByUsername("admin");
    	if (!userDetailsManager.userExists("admin")) {
    		UserDetails user = User.builder()
			.username("admin")
			.password(passwordEncoder().encode("admin"))
			.roles("USER", "ADMIN")
    			.build();
    		userDetailsManager.createUser(user);
    	}
    	return userDetailsManager;
    }
    
    @Bean
    public PasswordEncoder passwordEncoder() {
    	return new BCryptPasswordEncoder();
    }
    
    @Bean 
    public VerificationCodeManager verificationCodeManager() {
    	return new VerificationCodeManager();
    }
}
