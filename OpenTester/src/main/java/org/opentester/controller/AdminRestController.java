package org.opentester.controller;

import java.util.ArrayList;
import java.util.List;

import org.opentester.MyUserDetailsService;
import org.opentester.dto.UserDto;
import org.opentester.entity.UserEntity;
import org.opentester.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.provisioning.UserDetailsManager;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


@RestController
@RequestMapping("/admin/rest")
public class AdminRestController {

	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private MyUserDetailsService userDetailsManager;
	
	@Autowired
	private UserEmailSender userEmailSender;
	
    @GetMapping("/users")
    public List<UserDto> users() { 	
    	List<UserEntity> users =  userRepository.findAll();
    	
    	List<UserDto> ret = new ArrayList<>();
    	users.forEach(u -> ret.add(UserDto.fromEntity(u)));
    	
    	return ret;
    }
    
    @DeleteMapping("/users")
    public String deleteUser(@AuthenticationPrincipal UserDetails userDetails, @RequestParam(value = "username", required=true) String username) {
    	userDetailsManager.deleteUser(username);
    	return "OK";
    }
    
    @PostMapping("users/add")
    public String addUsers(@RequestBody List<UserDto> users) {
    	return "OK";
    }
}
