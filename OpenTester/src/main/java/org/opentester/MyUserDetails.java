package org.opentester;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.opentester.entity.AuthorityEntity;
import org.opentester.entity.UserEntity;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import lombok.Data;

@Data
public class MyUserDetails implements UserDetails {

	private UserEntity user = new UserEntity();

	public MyUserDetails(UserEntity user) {
		this.user = user;
	}

	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		List<GrantedAuthority> ret = new ArrayList<>();
		for (AuthorityEntity auth : this.user.getAuthorities()) {
			ret.add(new SimpleGrantedAuthority(auth.getAuthority()));
		}
		return ret;
	}

	@Override
	public String getPassword() {
		return this.user.getPassword();
	}

	@Override
	public String getUsername() {
		return this.user.getUsername();
	}

	@Override
	public boolean isAccountNonExpired() {
		return true;
	}

	@Override
	public boolean isAccountNonLocked() {
		return true;
	}

	@Override
	public boolean isCredentialsNonExpired() {

		return true;
	}

	@Override
	public boolean isEnabled() {
		return true;
	}

}
