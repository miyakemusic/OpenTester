package org.opentester.dto;

import java.util.ArrayList;
import java.util.List;

import org.opentester.entity.UserEntity;

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import lombok.Data;

@Data
public class UserDto {
	
	public UserDto() {}

    @Size(max = 32, message = "up to 32 letters")
	private String firstName = "";  
    
    @Size(max = 32, message = "up to 32 letters")
    private String lastName = "";
    
    @NotBlank
    private String password = "";
    
    @NotBlank
    private String matchingPassword = "";
    private String username = "";

    private String code = "";
    
    private List<String> authorities = new ArrayList<>();
    
	public boolean isPasswordMatched() {
		return !this.password.isBlank() && this.password.equals(matchingPassword);
	}
	public static UserDto builder() {
		return new UserDto();
	}
	
	public UserDto username(String username) {
		this.username = username;
		return this;
	}

	public UserDto password(String password) {
		this.password = password;
		return this;
	}

	public UserDto roles(String ... roles) {
		for (String role : roles) {
			this.authorities.add(role);
		}
		return this;
	}

	public UserDto build() {
		return this;
	}
	public static UserDto fromEntity(UserEntity u) {
		UserDto ret = new UserDto();
		u.getAuthorities().forEach(a -> ret.authorities.add(a.getAuthority().replace("ROLE_", "")));
		ret.setFirstName(u.getFirstname());
		ret.setLastName(u.getLastname());
		ret.setUsername(u.getUsername());
		return ret;
	}
	public UserDto firstname(String firstname) {
		this.firstName = firstname;
		return this;
	}
	public UserDto lastname(String lastname) {
		this.lastName = lastname;
		return this;
	}
	
    // standard getters and setters
}
